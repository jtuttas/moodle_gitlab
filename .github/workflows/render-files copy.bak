name: Render files

on: [push]

jobs:
  render_drawio:
    runs-on: ubuntu-latest
    name: Render draw.io files
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Render draw.io files
      uses: docker://ghcr.io/racklet/render-drawio-action:v1.0.3
      id: render
      with: # Showcasing the default values here
        formats: 'svg'
        sub-dirs: 'docs'
        skip-dirs: '.git'
        # files: '' # unset, specify `dest-file=src-file` mappings here
        log-level: 'info'      

    - name: Cache files 
      uses: actions/cache@v2
      env:
        cache-name: cache-files
      with:
        path: | 
          ./docs
          ./config
          ./pdfs
        key: $build-${{ env.cache-name }}-${{ github.event.head_commit.message }}
    - name: List the rendered files
      run: 'ls -l ${{ steps.render.outputs.rendered-files }}'
    - name: MV the rendered files
      run: 'mv --backup=numbered -t ./docs/images ${{ steps.render.outputs.rendered-files }}'
      
  render_umlet:
    runs-on: ubuntu-latest
    name: Render umlet files
    needs: [render_drawio]
    steps:
    - name: Cache files 
      uses: actions/cache@v2
      env:
        cache-name: cache-files
      with:
        path: | 
          ./docs
          ./config
          ./pdfs          
        key: $build2-${{ env.cache-name }}-${{ github.event.head_commit.message }}
        restore-keys: |
          $build-${{ env.cache-name }}-${{ github.event.head_commit.message }}
    - name: list files
      run: 'ls -laR'
    - name: update
      run: sudo apt-get update
    - name: upgrade
      run: sudo apt-get upgrade
    - name: Install Umlet
      run: sudo apt-get install umlet
    - name: render files
      run: 'sh ./config/render_umlet.sh'

  converttopdf:
    name: Build PDF
    needs: render_umlet
    runs-on: ubuntu-latest
    steps:
      - name: Cache files 
        uses: actions/cache@v2
        env:
          cache-name: cache-files
        with:
          path: | 
            ./docs
            ./config
            ./pdfs
          key: $build3-${{ env.cache-name }}-${{ github.event.head_commit.message }}
          restore-keys: |
            $build2-${{ env.cache-name }}-${{ github.event.head_commit.message }}
      - name: list files
        run: 'ls -laR'
      - uses: baileyjm02/markdown-to-pdf@v1
        with:
          input_dir: docs
          output_dir: pdfs
          images_dir: docs/images
          # for example <img src="./images/file-name.png">
          image_import: ./images
          # Default is true, can set to false to only get PDF files
          build_html: false

  render-mk-docs:
    name: mkdocs
    needs: converttopdf 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache files 
        uses: actions/cache@v2
        env:
          cache-name: cache-files
        with:
          path: | 
            ./docs
            ./config
            ./pdfs
            
          key: $build4-${{ env.cache-name }}-${{ github.event.head_commit.message }}
          restore-keys: |
            $build3-${{ env.cache-name }}-${{ github.event.head_commit.message }}
      - name: list files
        run: 'ls -laR'
      - name: Deploy docs
        uses: mhausenblas/mkdocs-deploy-gh-pages@master
        # Or use mhausenblas/mkdocs-deploy-gh-pages@nomaterial to build without the mkdocs-material theme
        env:
          CONFIG_FILE: mkdocs.yml 
      - uses: EndBug/add-and-commit@v7
        with:
          # This "special" author name and email will show up as the GH Actions user/bot in the UI
          author_name: github-actions
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: 'Automatically render files'
          add: "."